plugins {
	id 'net.minecraftforge.gradle'
	id 'org.spongepowered.mixin'
	id 'idea'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	maven { url "https://maven.minecraftforge.net/" }
	maven {url 'https://maven.architectury.dev'}
}

mixin {
	add sourceSets.main, 'calio.mixins.refmap.json'
}

sourceSets {
	main {
		resources {
			srcDir project.file("src/generated/resources");
		}
	}
}

minecraft {
	mappings channel: 'official', version: project.ext.minecraft_version
	def atFile = file("src/main/resources/META-INF/accesstransformer.cfg");
	if (atFile.exists()) accessTransformer atFile

	runs {
		client {
			workingDirectory file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
            property 'mixin.debug', 'true'

			mods {
				calio {
					source sourceSets.main
				}
			}
		}
		server {
			workingDirectory file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
            property 'mixin.debug', 'true'

			mods {
				calio {
					source sourceSets.main
				}
			}
		}
		data {
			workingDirectory file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
            property 'mixin.debug', 'true'

            args '--all'
            args '--mod', 'calio'
            args '--existing', file('src/main/resources')
            args '--existing', file('src/generated/resources')
            args '--output', file('src/generated/resources/')
			mods {
				calio {
					source sourceSets.main
				}
			}
		}
	}
}

processResources {
    filesMatching('META-INF/mods.toml', {
        expand  'version': version,
                'minecraft_version': project.ext.minecraft_version
    })
}

jar {
	manifest {
		attributes(
				"Specification-Title": project.name,
				"Specification-Vendor": 'apace100',
				"Specification-Version": '1.0',
				"Implementation-Title": project.name,
				"Implementation-Version": project.version,
				"Implementation-Vendor": "EdwinMindcraft",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		)
	}
}

dependencies {
	minecraft group: 'net.minecraftforge', name: 'forge', version: "${minecraft_version}-${forge_version}"
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.2'
	implementation group: 'org.spongepowered', name: 'mixin', version: '0.8.3'
    implementation group: 'org.jetbrains', name: 'annotations', version: '21.0.1'
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}